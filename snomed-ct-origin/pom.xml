<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>dev.ikm.snomedct</groupId>
        <artifactId>snomed-ct-data</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <groupId>${data-artifact.groupId}</groupId>
    <artifactId>${data-artifact.artifactId}</artifactId>
    <version>${data-artifact.version}</version>
    <packaging>pom</packaging>

    <name>snomed-ct-origin</name>

    <properties>
        <data-artifact.groupId>dev.ikm.data.snomedct</data-artifact.groupId>
        <data-artifact.artifactId>snomedct-origin</data-artifact.artifactId>
        <data-artifact.version>${dataStore}-${source.version}+1.0.0-SNAPSHOT</data-artifact.version>
    </properties>

    <profiles>
        <profile>
            <id>generateDataLocal</id>
            <activation>
                <property>
                    <name>altDeploymentRepository</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Unzip source data -->
                    <plugin>
                        <groupId>dev.ikm.maven.tinkar</groupId>
                        <artifactId>tinkar-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>process-snomed-origin</id>
                                <goals>
                                    <goal>unzip-source</goal>
                                </goals>
                                <configuration>
                                    <source>${source.zip}</source>
                                    <outputDirectory>${origin.working.directory}/snomedFull</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>process-gmdn-mapping-origin</id>
                                <goals>
                                    <goal>unzip-source</goal>
                                </goals>
                                <configuration>
                                    <source>${gmdn.mapping.source.zip}</source>
                                    <outputDirectory>${origin.working.directory}/gmdnMapping</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>process-gmdn-device-origin</id>
                                <goals>
                                    <goal>unzip-source</goal>
                                </goals>
                                <configuration>
                                    <source>${gmdn.device.source.zip}</source>
                                    <outputDirectory>${origin.working.directory}/gmdnDevice</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-origin-manifest</id>
                                <goals>
                                    <goal>generate-manifest-resource</goal>
                                </goals>
                                <configuration>
                                    <packagerName>${packager.name}</packagerName>
                                    <originVersion>${project.version}</originVersion>
                                    <originURL>${origin.url}</originURL>
                                    <originNamespace>${origin.namespace}</originNamespace>
                                    <outputDirectory>${origin.working.directory}</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>flatten-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>flatten-test</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>flatten</goal>
                                </goals>
                                <configuration>
                                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                                    <updatePomFile>true</updatePomFile>
                                    <keepCommentsInPom>true</keepCommentsInPom>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Assemble and zip data into Tinkar Origin Artifact -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>assemble-origin-artifact</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <inlineDescriptors>
                                        <inlineDescriptor>
                                            <id>data</id>
                                            <formats>
                                                <format>zip</format>
                                            </formats>
                                            <fileSets>
                                                <fileSet>
                                                    <outputDirectory>src</outputDirectory>
                                                    <directory>${origin.working.directory}</directory>
                                                    <includes>
                                                        <include>**</include>
                                                    </includes>
                                                    <excludes>
                                                        <exclude>MANIFEST.MF</exclude>
                                                    </excludes>
                                                </fileSet>
                                                <fileSet>
                                                    <outputDirectory>META-INF</outputDirectory>
                                                    <directory>${origin.working.directory}</directory>
                                                    <includes>
                                                        <include>MANIFEST.MF</include>
                                                    </includes>
                                                </fileSet>
                                            </fileSets>
                                            <includeBaseDirectory>false</includeBaseDirectory>
                                        </inlineDescriptor>
                                    </inlineDescriptors>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Attach Tinkar Origin Artifact to project -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-artifacts</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>${project.build.directory}/${project.artifactId}-${project.version}-data.zip</file>
                                            <type>zip</type>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
